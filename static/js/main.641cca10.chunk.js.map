{"version":3,"sources":["store/loading.ts","store/todos.ts","store/reverse.ts","store/loaded.ts","store/message.ts","store/index.ts","store/sort.ts","helpers/api.ts","components/TodoList.tsx","components/Preloader.tsx","components/LoadButton.tsx","App.tsx","index.tsx"],"names":["setLoading","status","type","setTodos","todos","setReverseValue","setLoaded","setErrorMessage","message","isLoading","state","loading","getTodos","getErrorMessage","errorMessage","getReverseValue","isReverse","getSortType","sortType","isLoaded","loaded","rootReducer","combineReducers","action","filter","todo","id","store","createStore","composeWithDevTools","getDataFromServer","url","a","fetch","response","json","getTodosData","tasks","users","newTodos","map","task","user","find","userId","FILTER_BUTTONS","title","TodoList","dispatch","useDispatch","useSelector","sortedTodos","useMemo","reverse","Number","sort","b","name","localeCompare","completed","className","key","toString","onClick","setSortType","Icon","style","color","fontSize","Preloader","mapDispatch","load","connector","connect","init","disabled","App","length","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.641cca10.chunk.js","sourcesContent":["import { AnyAction } from 'redux';\n\nconst START_LOAD = 'START_LOAD';\n\nexport const setLoading = (status: boolean) => ({ type: START_LOAD, status });\n\nexport const loadReducer = (state = false, action: AnyAction) => {\n  switch (action.type) {\n    case START_LOAD:\n      return !state;\n\n    default:\n      return state;\n  }\n}\n","import { AnyAction } from 'redux';\n\nconst SET_TODOS = 'SET_TODOS';\nconst DELETE_TODO = 'DELETE_TODO';\n\nexport const setTodos = (todos: Todo[]) => ({type: SET_TODOS, todos});\nexport const deleteTodo = (id: number) => ({type: DELETE_TODO, id});\n\nexport const todosReducer = (state = [] as Todo[], action: AnyAction) => {\n  switch(action.type) {\n    case SET_TODOS:\n      return action.todos;\n\n    case DELETE_TODO:\n      return state.filter(todo => todo.id !== action.id);\n\n    default: return state;\n  }\n}\n","import { AnyAction } from 'redux';\n\nconst REVERSE = 'REVERSE';\n\nexport const setReverseValue = (status: boolean) => ({ type: REVERSE, status });\n\nexport const reverseReducer = (state = false, action: AnyAction) => {\n  switch (action.type) {\n    case REVERSE:\n      return !state;\n\n    default:\n      return state;\n  }\n}\n","import { AnyAction } from 'redux';\n\nconst FINISH_LOAD = 'FINISH_LOAD';\n\nexport const setLoaded = (status: boolean) => ({ type: FINISH_LOAD, status });\n\nexport const loadedReducer = (state = false, action: AnyAction) => {\n  switch (action.type) {\n    case FINISH_LOAD:\n      return !state;\n\n    default:\n      return state;\n  }\n}\n","import { AnyAction } from 'redux';\n\nconst ERROR = 'ERROR';\n\nexport const setErrorMessage = (message: string) => ({ type: ERROR, message });\n\nexport const errorReducer = (state = '', action: AnyAction) => {\n  switch (action.type) {\n    case ERROR:\n      return action.message;\n\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { loadReducer } from './loading';\nimport { todosReducer } from './todos';\nimport { sortTypeReducer } from './sort';\nimport { reverseReducer } from './reverse';\nimport { loadedReducer }  from './loaded';\nimport { errorReducer } from './message';\n\n\nexport const isLoading = (state: RootState) => state.loading;\nexport const getTodos = (state: RootState) => state.todos;\nexport const getErrorMessage = (state: RootState) => state.errorMessage;\nexport const getReverseValue = (state: RootState) => state.isReverse;\nexport const getSortType = (state: RootState) => state.sortType;\nexport const isLoaded = (state: RootState) => state.loaded;\n\nexport type RootState = {\n  loading: boolean;\n  loaded: boolean;\n  sortType: string;\n  isReverse: boolean;\n  todos: Todo[],\n  errorMessage: string,\n};\n\nconst initialState: RootState = {\n  loading: false,\n  loaded: false,\n  sortType: 'id',\n  isReverse: false,\n  todos: [],\n  errorMessage: '',\n};\n\nconst rootReducer =  combineReducers({\n  loading: loadReducer,\n  loaded: loadedReducer,\n  todos: todosReducer,\n  sortType: sortTypeReducer,\n  isReverse: reverseReducer,\n  errorMessage: errorReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(),\n);\n\nexport default store;\n","import { AnyAction } from 'redux';\n\nconst SORT_TYPE = 'SORT_TYPE';\n\nexport const setSortType = (sortType: string) => ({ type: SORT_TYPE, sortType });\n\nexport const sortTypeReducer = (state = 'id', action: AnyAction) => {\n  switch (action.type) {\n    case SORT_TYPE:\n      return action.sortType;\n\n    default:\n      return state;\n  }\n}\n","const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nconst getDataFromServer = async (url: string) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getTodosData = async () => {\n  const tasks: Todo[] = await getDataFromServer(TODOS_URL);\n  const users: User[] = await getDataFromServer(USERS_URL);\n  const newTodos = tasks.map(task => ({\n      ...task,\n      user: users.find(user => user.id === task.userId),\n    }));\n\n  return newTodos;\n};\n","import React, { useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTodos, getSortType, getReverseValue } from '../store';\nimport { deleteTodo } from '../store/todos';\nimport { setSortType } from '../store/sort';\nimport { setReverseValue } from '../store/reverse';\nimport Icon from '@material-ui/core/Icon';\n\nconst FILTER_BUTTONS: FilterButton[] = [\n  { id: 1, title: 'id'},\n  { id: 2, title: 'name'},\n  { id: 3, title: 'title'},\n  { id: 4, title: 'completed'},\n];\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos: Todo[] = useSelector(getTodos);\n  const sortType: string = useSelector(getSortType);\n  const isReverse: boolean = useSelector(getReverseValue);\n\n  const handleClick = (type: string) => {\n    if(!type){\n      return;\n    }\n    if(type === sortType) {\n      dispatch(setReverseValue(!isReverse));\n    } else {\n      dispatch(setReverseValue(false));\n      dispatch(setSortType(type));\n    }\n  }\n\n  const sortedTodos = useMemo(() => {\n    const reverse = Number(isReverse) ? -1 : 1;\n\n    switch (sortType) {\n      case 'id':\n        return [...todos].sort((a, b) => (a.id - b.id) * reverse);\n\n      case 'name':\n        return [...todos].sort((a, b) => (a.user.name.localeCompare(b.user.name)) * reverse);\n\n\n      case 'title':\n        return [...todos].sort((a, b) => (a.title.localeCompare(b.title))* reverse);\n\n      case 'completed':\n        return [...todos].sort((a, b) => (Number(a.completed) - Number(b.completed))* reverse);\n\n        default: return todos;\n    }\n  }, [sortType, todos, isReverse]);\n\n  return (\n    <>\n      <div className=\"buttons_panel\">\n        {FILTER_BUTTONS.map(({ id, title }) => (\n          <button\n            type=\"button\"\n            key={id}\n            id={id.toString()}\n            onClick={() => handleClick(title)}\n          >\n            {title}\n          </button>\n        ))}\n      </div>\n      <ul>\n        {sortedTodos.map(todo => (\n          <li className=\"todo\" key={todo.id}>\n            <span>{todo.id}</span>\n            <span>{todo.user.name}</span>\n            <span>{todo.title}</span>\n            {todo.completed\n              ? (\n                <Icon\n                  style={{ color: `#709e0e` }}\n                  className=\"done\"\n                >\n                  done\n                </Icon>\n                )\n              : (<div></div>)\n            }\n            <span className=\"delete\">\n              <button\n                type=\"button\"\n                onClick={() => dispatch(deleteTodo(todo.id))}\n                className=\"delete-btn\"\n              >\n                <Icon fontSize=\"small\">delete</Icon>\n              </button>\n            </span>\n          </li>\n        ))}\n      </ul>\n\n    </>\n  );\n}\n\n\n\n/*{todo.completed\n  ? (<i className=\"material-icons green-text\">check_circle</i>)\n  : (<i className=\"material-icons orange-text\">lens</i>)}*/\n","import React from 'react';\n\nexport const Preloader = () => (\n  <div id=\"preloader\">\n    <div id=\"loader\"></div>\n  </div>\n)\n","import React from 'react';\nimport { connect, ConnectedProps} from 'react-redux';\nimport { RootState, isLoading } from '../store';\nimport { setLoading } from '../store/loading';\n\nconst mapState = (state: RootState) => {\n  return {\n    loading: isLoading(state), // we use a selector `isLoading` defined in the store\n  };\n};\n\nconst mapDispatch = {\n  load: setLoading,\n};\n\nconst connector = connect(mapState, mapDispatch);\n\ntype Props = ConnectedProps<typeof connector> & {\n  title: string;\n  init: () => void;\n};\n\nconst LoadButton: React.FC<Props> = ({ init, loading, title }) => {\n\n  return (\n    <button\n      className=\"start-btn\"\n      type=\"button\"\n      onClick={init}\n      disabled={loading}\n    >\n      {title}\n    </button>\n  );\n};\n\nexport default connector(LoadButton);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTodosData } from './helpers/api';\nimport { setTodos } from './store/todos';\nimport { setLoading } from './store/loading';\nimport { TodoList } from './components/TodoList';\nimport { isLoading, isLoaded, getErrorMessage } from './store/';\nimport { setLoaded } from './store/loaded';\nimport { setErrorMessage } from './store/message';\nimport { Preloader } from './components/Preloader'\n\n\nimport './App.scss';\nimport LoadButton from './components/LoadButton';\n\n\nconst App = () => {\n  const loaded = useSelector(isLoaded);\n  const loading = useSelector(isLoading);\n  const errorMessage = useSelector(getErrorMessage)\n  const dispatch = useDispatch();\n\n  const init = async() => {\n    dispatch(setErrorMessage(``));\n    dispatch(setLoading(true));\n\n    try {\n      const todos = await getTodosData();\n      dispatch(setTodos(todos));\n      dispatch(setLoaded(true));\n    } catch (error) {\n      dispatch(setErrorMessage(`Sorry, something is wrong: ${error}`));\n      dispatch(setLoaded(false));\n    }\n\n    dispatch(setLoading(false));\n  };\n\n  return (\n    <div className=\"App\">\n\n      {(\n        !loading && !loaded) && (\n        <LoadButton title=\"Load\" init={init} />\n      )}\n      {loading && !loaded && (\n      <>\n\n        <Preloader />\n      </>)\n      }\n      {loaded\n        && (errorMessage.length === 0)\n        && (\n          <>\n            <h1>Redux list of todos</h1>\n            <TodoList />\n          </>\n      )}\n\n      {(errorMessage.length > 0) && (\n        <h2>{errorMessage}</h2>\n      )}\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}